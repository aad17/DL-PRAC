import tensorflow as tf
from keras.preprocessing.image import ImageDataGenerator

train_datagen = ImageDataGenerator(rescale = 1./255, shear_range = 0.2, zoom_range = 0.2, horizontal_flip = True)

train_set = train_datagen.flow_from_directory('./Lab Assignment 3 Dataset/train', 
                                              target_size=(64, 64), 
                                              batch_size=64, 
                                              class_mode='binary')
                                              
test_datagen = ImageDataGenerator(rescale = 1./255)


test_set = test_datagen.flow_from_directory('./Lab Assignment 3 Dataset/test',
                                            target_size=(64, 64), 
                                            batch_size=64, 
                                            class_mode='binary')

train_set[0][0][0].shape

from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Conv2D, MaxPool2D, Flatten, Dense

model = Sequential()

model.add(Conv2D(filters=32, kernel_size=3, activation='relu', input_shape=[64, 64, 3]))

model.add(MaxPool2D(pool_size=2, strides=2))

model.add(Conv2D(filters=32, kernel_size=3, activation='relu'))

model.add(MaxPool2D(pool_size=2, strides=2))

model.add(Flatten())

model.add(Dense(units=128, activation='relu'))

model.add(Dense(units=1, activation='sigmoid'))

model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])

model.fit(x = train_set, validation_data = test_set, epochs = 20)

import numpy as np
from keras.preprocessing import image
test_image = image.load_img('Lab Assignment 3 Dataset/Single Prediction/3.jpg', target_size = (64, 64))
test_image = image.img_to_array(test_image)
test_image = np.expand_dims(test_image, axis = 0)
result = model.predict(test_image)
if result[0][0] == 1:
    prediction = 'planes'
else:
    prediction = 'cars'
    
print(prediction)
